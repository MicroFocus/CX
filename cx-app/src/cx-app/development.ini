[uwsgi]
uid = www-data
gid = www-data
stats = 127.0.0.1:9191
#socket = /opt/tmp/uwsgi.sock
socket = 0.0.0.0:6001
master = true

#threads = 10
enable-threads = true
# lazy=true  # lazy - every worker loads pyramid independently. mem usage getting high

# Adaptive workers spawning (cheaper algorithm)

# maximum number of workers that can be spawned
processes = 20
cheaper-algo = spare
# minimum number of workers to keep at all times
cheaper = 4
# number of workers to spawn at startup
cheaper-initial = 4
cheaper-step = 1

# harakiri increased - install/replication operations take long time on slow VM
harakiri = 180
harakiri-verbose = true
# 3 MB
limit-post = 3145728
# protect from DoS of very slow clients (nginx do it as well; anyway uwsgi prints warning - it wants post-buf)
post-buffering = 8192

#daemonize = /opt/AuCore/logs/uwsgi.log
#pidfile = /opt/uwsgi.pid

# reload workers after the specified amount of managed requests
max-requests = 10000
no-orphans = true
venv = /opt/penv
need-app = true
# emulate python logging
# uwsgi message appears in the log *after* all python messages during a request
log-format = %(uwsgi_time) INFO [uwsgi-end-req] %(method) %(uri) %(addr) %(msecs)ms
[app:main]
use = egg:cx

pyramid.reload_templates = true
pyramid.debug_authorization = false
pyramid.debug_notfound = false
pyramid.debug_routematch = false
pyramid.default_locale_name = en
pyramid.includes =
    pyramid_debugtoolbar
    pyramid_tm

sqlalchemy.url = sqlite:///%(here)s/cx.sqlite

# By default, the toolbar only appears for clients from IP addresses
# '127.0.0.1' and '::1'.
# debugtoolbar.hosts = 127.0.0.1 ::1

###
# wsgi server configuration
###

[server:main]
use = egg:waitress#main
host = 0.0.0.0
port = 6543

###
# logging configuration
# http://docs.pylonsproject.org/projects/pyramid/en/latest/narr/logging.html
###

[loggers]
keys = root, cx, sqlalchemy

[handlers]
keys = console

[formatters]
keys = generic

[logger_root]
level = INFO
handlers = console

[logger_cx]
level = DEBUG
handlers =
qualname = cx

[logger_sqlalchemy]
level = INFO
handlers =
qualname = sqlalchemy.engine
# "level = INFO" logs SQL queries.
# "level = DEBUG" logs SQL queries and results.
# "level = WARN" logs neither.  (Recommended for production systems.)

[handler_console]
class = StreamHandler
args = (sys.stderr,)
level = NOTSET
formatter = generic

[formatter_generic]
format = %(asctime)s %(levelname)-5.5s [%(name)s][%(threadName)s] %(message)s
